# Cakefile to document, compile, join and minify CoffeeScript files for
# client side apps. Just edit the config object literal.

fs            = require 'fs'
{exec, spawn} = require 'child_process'
  
# order of files in `inFiles` is important
config =
  srcDir:  'src'
  outDir:  'lib'
  inFiles: [ 'taskstatus', 'compositetask', 'sequence' ]
  outFile: 'behaviortrees'
  testDirs: [ 'test', 'test/core' ]

outJS    = "#{config.outDir}/#{config.outFile}"
strFiles = ("#{config.srcDir}/#{file}.coffee" for file in config.inFiles).join ' '

# deal with errors from child processes
exerr  = (err, sout, serr)->
  process.stdout.write err  if err
  process.stdout.write sout if sout
  process.stdout.write serr if serr

task 'doc', 'generate documentation for *.coffee files', ->
  exec "docco #{config.srcDir}/*.coffee", exerr

# this will keep the non-minified compiled and joined file updated as files in
# `inFile` change.
task 'watch', 'watch and compile changes in source dir', ->
  watch = exec "coffee -j #{outJS}.js -cw #{strFiles}"
  watch.stdout.on 'data', (data)-> process.stdout.write data

task 'build', 'join and compile *.coffee files', ->
  exec "coffee -j #{outJS}.js -c #{strFiles}", exerr

task 'build:debug', 'concatinate and compile but not minify', ->
  console.log 'Creating debug build'
  exec "hem build -d", exerr

#task 'min', 'minify compiled *.js file', ->
#  exec "java -jar #{config.yuic} #{outJS}.js -o #{outJS}.min.js", exerr

task 'bam', 'build and minify', ->
  invoke 'build'
  invoke 'min'

#task 'test', 'runs jasmine tests', ->
#  exec 'jasmine-node --coffee --verbose spec', exerr

REPORTER = "spec"

task "test", "run tests", ->
  exec "mocha 
    --compilers coffee:coffee-script
    --reporter #{REPORTER}
    --require coffee-script
    --require should
    --require test/helpers/test-helper.coffee
    --colors
    --ui bdd
    --growl 
    #{(config.testDirs).join ' '}
  ", (err, output) ->
    throw err if err
    console.log output

task "testw", "run tests with mocha + watch", ->
  exec "mocha 
    --compilers coffee:coffee-script
    --reporter #{REPORTER}
    --require coffee-script
    --require should
    --require test/helpers/test-helper.coffee
    --colors
    --ui bdd
    --growl 
    --watch
    #{(config.testDirs).join ' '}
  ", (err, output) ->
    throw err if err
    console.log output

# watch files and run tests automatically
task 'watch:test', 'watch and run tests', ->
  console.log 'watching...'

  whenChanged = (filename, fun)->
    fs.watch filename, (curr, prev)->
      fun() if curr.mtime > prev.mtime

  for f in config.inFiles
    whenChanged "#{f}.coffee", ->
      console.log "===== TEST #{new Date().toLocaleString()} ====="
      invoke 'test'

# tasks:
# build:release
# build:debug
# test
# docs
# watch:test
# watch:build